type error<a> = | ["ERROR", {received:a} ];

const equal : <T>((a:T, b:T) => bool) = p => {
    Bytes.pack(p[0]) == Bytes.pack(p[1]);
};

const status = (b:bool) : string => {
    if (b) {
        return "✅";
    } else {
        return "❌";        
    }
};

const assert_equal : <T>((result:T, expected:T) => unit) = p => {
    const result = equal(p[0], p[1]);

    Test.log(status(result), { expected: p[1] });

    if (result == false) {
        Test.log(ERROR({received: p[0]}));
        failwith("Test case fails");
    };
};

const cases = (l:list<(u:unit)=>unit>):unit => {
    List.iter((f:(u:unit)=>unit):unit => f(unit), l);
};
