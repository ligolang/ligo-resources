#import "common/todo.jsligo" "K"

/*
  Write a function able to compute the factorial.
  This function should be recursive and don't use 
*/

export const factorial = (n:nat) : nat => {
    const factorial_terminal = (acc:nat,max:nat,n:nat) : nat => {
        if (n > max) { 
            return acc; 
        } else { 
            return factorial_terminal([acc*n,max,n + (1 as nat)]);
        }
    };

    factorial_terminal(1 as nat,n,1 as nat);
    // K.todo("Should compute factorial using a recursive function");
};

/*
  Write a function able to sum all element of a given list of integers.
  This function should be recursive and don't use 
*/

export const sum_all = (l:list<int>) : int => {
    const sum_all_terminal = (acc:int,l:list<int>) : int => {
        match(l, list([
            ([]:list<int>) => acc,
            ([h,...t]:list<int>) => sum_all_terminal(acc + h,t)
        ]));
    };

    sum_all_terminal(0,l);
    // K.todo("Should sum all elements of the list using a recursive function");
};
